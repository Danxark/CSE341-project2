{
  "openapi": "3.0.0",
  "info": {
    "title": "CSE341 Project 2 API",
    "version": "1.0.0",
    "description": "API for Users and Products CRUD operations"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/User" } }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/User" }
            }
          }
        },
        "responses": {
          "201": { "description": "User created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/User" } } }
        },
        "responses": {
          "200": { "description": "User updated" },
          "400": { "description": "Invalid input" },
          "404": { "description": "User not found" }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "User deleted" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "List of products",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "$ref": "#/components/schemas/Product" } }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/Product" }
            }
          }
        },
        "responses": {
          "201": { "description": "Product created" },
          "400": { "description": "Invalid input" }
        }
      }
    },
    "/products/{id}": {
      "put": {
        "summary": "Update a product",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/Product" } } }
        },
        "responses": {
          "200": { "description": "Product updated" },
          "400": { "description": "Invalid input" },
          "404": { "description": "Product not found" }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": {
          "200": { "description": "Product deleted" },
          "404": { "description": "Product not found" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "age": { "type": "integer" }
        }
      },
      "Product": {
        "type": "object",
        "required": ["name", "price"],
        "properties": {
          "name": { "type": "string" },
          "price": { "type": "number" },
          "description": { "type": "string" }
        }
      }
    }
  }
}
✅ Steps:
Save this file as swagger.json in your project root (next to server.js).

Make sure your server.js includes this:

js
Copiar código
const swaggerUi = require('swagger-ui-express');
const swaggerDocument = require('./swagger.json');
app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument));